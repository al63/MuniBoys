import groovy.swing.SwingBuilder

buildscript {

    ext {
        kotlin_version = '1.1.4' // kotlin version
    }

    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    flatDir {
        dirs 'libs'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: "org.jetbrains.kotlin.kapt"

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "ride.the.bus.muniboys"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 3
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file("android.jks")
            storePassword ""
            keyAlias "muni-release"
            keyPassword ""
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile 'com.android.billingclient:billing:dp-1'

}

task askForPasswords << {
    // Must create String because input returns char[]

    def storePw = ""
    def keyPw = ""

    new SwingBuilder().edt {
        dialog(modal: true, title: 'Enter password', alwaysOnTop: true, resizable: false, locationRelativeTo: null, pack: true, show: true) {
            vbox { // Put everything below each other
                label(text: "Please enter store passphrase:")
                def input1 = passwordField()
                label(text: "Please enter key passphrase:")
                def input2 = passwordField()
                button(defaultButton: true, text: 'OK', actionPerformed: {
                    storePw = input1.password
                    keyPw = input2.password
                    dispose()
                })
            }
        }
    }

    android.signingConfigs.release.storePassword = new String(storePw)
    android.signingConfigs.release.keyPassword = new String(keyPw)
}

tasks.whenTaskAdded { theTask ->
    if (theTask.name == "packageRelease") {
        theTask.dependsOn "askForPasswords"
    }
}
